from typing import TypedDict, NamedTuple, Callable


class StateAction(NamedTuple):
    d: int
    p: int
    s: int
    a: int

class Feature(TypedDict):
    name: str
    func: Callable[[StateAction], float]
    min_value: float
    max_value: float


AVAILABLE_FEATURES: list[Feature] = [
    { 'name': 'constant', 'func': (lambda sa: 1),
      'min_value': 1, 'max_value': 1 },
    { 'name': 'action', 'func': (lambda sa: 1 if sa.a else 0 ),''
      'min_value': 0, 'max_value': 1 },
    { 'name': 'soft', 'func': (lambda sa: 1 if sa.s else 0 ),
      'min_value': 0, 'max_value': 1 },
    { 'name': 'soft*action', 'func': (lambda sa: sa.s * sa.a),
      'min_value': 0, 'max_value': 1 },
    { 'name': 'player', 'func': (lambda sa: sa.p),
      'min_value': 4, 'max_value': 21 },
    { 'name': 'player*action', 'func': (lambda sa: sa.p * sa.a),
      'min_value': 0, 'max_value': 21 },
    { 'name': 'player*soft', 'func': (lambda sa: sa.p * sa.s),
      'min_value': 0, 'max_value': 21 },
    { 'name': 'player*soft*action', 'func': (lambda sa: sa.p * sa.s * sa.a),
      'min_value': 0, 'max_value': 21 },
    { 'name': 'player^2', 'func': (lambda sa: sa.p**2),
      'min_value': 16, 'max_value': 441 },
    { 'name': 'player^2*action', 'func': (lambda sa: sa.p**2 * sa.a),
      'min_value': 0, 'max_value': 441 },
    { 'name': 'player^2*soft', 'func': (lambda sa: sa.p**2 * sa.s),
      'min_value': 0, 'max_value': 441 },
    { 'name': 'player^2*soft*action', 'func': (lambda sa: sa.p**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 441 },
    { 'name': 'player^3', 'func': (lambda sa: sa.p**3),
      'min_value': 64, 'max_value': 9261 },
    { 'name': 'player^3*action', 'func': (lambda sa: sa.p**3 * sa.a),
      'min_value': 0, 'max_value': 9261 },
    { 'name': 'player^3*soft', 'func': (lambda sa: sa.p**3 * sa.s),
      'min_value': 0, 'max_value': 9261 },
    { 'name': 'player^3*soft*action', 'func': (lambda sa: sa.p**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 9261 },
    { 'name': 'player^4', 'func': (lambda sa: sa.p**4),
      'min_value': 256, 'max_value': 194481 },
    { 'name': 'player^4*action', 'func': (lambda sa: sa.p**4 * sa.a),
      'min_value': 0, 'max_value': 194481 },
    { 'name': 'player^4*soft', 'func': (lambda sa: sa.p**4 * sa.s),
      'min_value': 0, 'max_value': 194481 },
    { 'name': 'player^4*soft*action', 'func': (lambda sa: sa.p**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 194481 },
    { 'name': 'dealer', 'func': (lambda sa: sa.d),
      'min_value': 2, 'max_value': 11 },
    { 'name': 'dealer*action', 'func': (lambda sa: sa.d * sa.a),
      'min_value': 0, 'max_value': 11 },
    { 'name': 'dealer*soft', 'func': (lambda sa: sa.d * sa.s),
      'min_value': 0, 'max_value': 11 },
    { 'name': 'dealer*soft*action', 'func': (lambda sa: sa.d * sa.s * sa.a),
      'min_value': 0, 'max_value': 11 },
    { 'name': 'dealer*player', 'func': (lambda sa: sa.d * sa.p),
      'min_value': 8, 'max_value': 231 },
    { 'name': 'dealer*player*action', 'func': (lambda sa: sa.d * sa.p * sa.a),
      'min_value': 0, 'max_value': 231 },
    { 'name': 'dealer*player*soft', 'func': (lambda sa: sa.d * sa.p * sa.s),
      'min_value': 0, 'max_value': 231 },
    { 'name': 'dealer*player*soft*action', 'func': (lambda sa: sa.d * sa.p * sa.s * sa.a),
      'min_value': 0, 'max_value': 231 },
    { 'name': 'dealer*player^2', 'func': (lambda sa: sa.d * sa.p**2),
      'min_value': 32, 'max_value': 4851 },
    { 'name': 'dealer*player^2*action', 'func': (lambda sa: sa.d * sa.p**2 * sa.a),
      'min_value': 0, 'max_value': 4851 },
    { 'name': 'dealer*player^2*soft', 'func': (lambda sa: sa.d * sa.p**2 * sa.s),
      'min_value': 0, 'max_value': 4851 },
    { 'name': 'dealer*player^2*soft*action', 'func': (lambda sa: sa.d * sa.p**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 4851 },
    { 'name': 'dealer*player^3', 'func': (lambda sa: sa.d * sa.p**3),
      'min_value': 128, 'max_value': 101871 },
    { 'name': 'dealer*player^3*action', 'func': (lambda sa: sa.d * sa.p**3 * sa.a),
      'min_value': 0, 'max_value': 101871 },
    { 'name': 'dealer*player^3*soft', 'func': (lambda sa: sa.d * sa.p**3 * sa.s),
      'min_value': 0, 'max_value': 101871 },
    { 'name': 'dealer*player^3*soft*action', 'func': (lambda sa: sa.d * sa.p**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 101871 },
    { 'name': 'dealer*player^4', 'func': (lambda sa: sa.d * sa.p**4),
      'min_value': 512, 'max_value': 2139291 },
    { 'name': 'dealer*player^4*action', 'func': (lambda sa: sa.d * sa.p**4 * sa.a),
      'min_value': 0, 'max_value': 2139291 },
    { 'name': 'dealer*player^4*soft', 'func': (lambda sa: sa.d * sa.p**4 * sa.s),
      'min_value': 0, 'max_value': 2139291 },
    { 'name': 'dealer*player^4*soft*action', 'func': (lambda sa: sa.d * sa.p**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 2139291 },
    { 'name': 'dealer^2', 'func': (lambda sa: sa.d**2),
      'min_value': 4, 'max_value': 121 },
    { 'name': 'dealer^2*action', 'func': (lambda sa: sa.d**2 * sa.a),
      'min_value': 0, 'max_value': 121 },
    { 'name': 'dealer^2*soft', 'func': (lambda sa: sa.d**2 * sa.s),
      'min_value': 0, 'max_value': 121 },
    { 'name': 'dealer^2*soft*action', 'func': (lambda sa: sa.d**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 121 },
    { 'name': 'dealer^2*player', 'func': (lambda sa: sa.d**2 * sa.p),
      'min_value': 16, 'max_value': 2541 },
    { 'name': 'dealer^2*player*action', 'func': (lambda sa: sa.d**2 * sa.p * sa.a),
      'min_value': 0, 'max_value': 2541 },
    { 'name': 'dealer^2*player*soft', 'func': (lambda sa: sa.d**2 * sa.p * sa.s),
      'min_value': 0, 'max_value': 2541 },
    { 'name': 'dealer^2*player*soft*action', 'func': (lambda sa: sa.d**2 * sa.p * sa.s * sa.a),
      'min_value': 0, 'max_value': 2541 },
    { 'name': 'dealer^2*player^2', 'func': (lambda sa: sa.d**2 * sa.p**2),
      'min_value': 64, 'max_value': 53361 },
    { 'name': 'dealer^2*player^2*action', 'func': (lambda sa: sa.d**2 * sa.p**2 * sa.a),
      'min_value': 0, 'max_value': 53361 },
    { 'name': 'dealer^2*player^2*soft', 'func': (lambda sa: sa.d**2 * sa.p**2 * sa.s),
      'min_value': 0, 'max_value': 53361 },
    { 'name': 'dealer^2*player^2*soft*action', 'func': (lambda sa: sa.d**2 * sa.p**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 53361 },
    { 'name': 'dealer^2*player^3', 'func': (lambda sa: sa.d**2 * sa.p**3),
      'min_value': 256, 'max_value': 1120581 },
    { 'name': 'dealer^2*player^3*action', 'func': (lambda sa: sa.d**2 * sa.p**3 * sa.a),
      'min_value': 0, 'max_value': 1120581 },
    { 'name': 'dealer^2*player^3*soft', 'func': (lambda sa: sa.d**2 * sa.p**3 * sa.s),
      'min_value': 0, 'max_value': 1120581 },
    { 'name': 'dealer^2*player^3*soft*action', 'func': (lambda sa: sa.d**2 * sa.p**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 1120581 },
    { 'name': 'dealer^2*player^4', 'func': (lambda sa: sa.d**2 * sa.p**4),
      'min_value': 1024, 'max_value': 23532201 },
    { 'name': 'dealer^2*player^4*action', 'func': (lambda sa: sa.d**2 * sa.p**4 * sa.a),
      'min_value': 0, 'max_value': 23532201 },
    { 'name': 'dealer^2*player^4*soft', 'func': (lambda sa: sa.d**2 * sa.p**4 * sa.s),
      'min_value': 0, 'max_value': 23532201 },
    { 'name': 'dealer^2*player^4*soft*action', 'func': (lambda sa: sa.d**2 * sa.p**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 23532201 },
    { 'name': 'dealer^3', 'func': (lambda sa: sa.d**3),
      'min_value': 8, 'max_value': 1331 },
    { 'name': 'dealer^3*action', 'func': (lambda sa: sa.d**3 * sa.a),
      'min_value': 0, 'max_value': 1331 },
    { 'name': 'dealer^3*soft', 'func': (lambda sa: sa.d**3 * sa.s),
      'min_value': 0, 'max_value': 1331 },
    { 'name': 'dealer^3*soft*action', 'func': (lambda sa: sa.d**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 1331 },
    { 'name': 'dealer^3*player', 'func': (lambda sa: sa.d**3 * sa.p),
      'min_value': 32, 'max_value': 27951 },
    { 'name': 'dealer^3*player*action', 'func': (lambda sa: sa.d**3 * sa.p * sa.a),
      'min_value': 0, 'max_value': 27951 },
    { 'name': 'dealer^3*player*soft', 'func': (lambda sa: sa.d**3 * sa.p * sa.s),
      'min_value': 0, 'max_value': 27951 },
    { 'name': 'dealer^3*player*soft*action', 'func': (lambda sa: sa.d**3 * sa.p * sa.s * sa.a),
      'min_value': 0, 'max_value': 27951 },
    { 'name': 'dealer^3*player^2', 'func': (lambda sa: sa.d**3 * sa.p**2),
      'min_value': 128, 'max_value': 586971 },
    { 'name': 'dealer^3*player^2*action', 'func': (lambda sa: sa.d**3 * sa.p**2 * sa.a),
      'min_value': 0, 'max_value': 586971 },
    { 'name': 'dealer^3*player^2*soft', 'func': (lambda sa: sa.d**3 * sa.p**2 * sa.s),
      'min_value': 0, 'max_value': 586971 },
    { 'name': 'dealer^3*player^2*soft*action', 'func': (lambda sa: sa.d**3 * sa.p**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 586971 },
    { 'name': 'dealer^3*player^3', 'func': (lambda sa: sa.d**3 * sa.p**3),
      'min_value': 512, 'max_value': 12326391 },
    { 'name': 'dealer^3*player^3*action', 'func': (lambda sa: sa.d**3 * sa.p**3 * sa.a),
      'min_value': 0, 'max_value': 12326391 },
    { 'name': 'dealer^3*player^3*soft', 'func': (lambda sa: sa.d**3 * sa.p**3 * sa.s),
      'min_value': 0, 'max_value': 12326391 },
    { 'name': 'dealer^3*player^3*soft*action', 'func': (lambda sa: sa.d**3 * sa.p**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 12326391 },
    { 'name': 'dealer^3*player^4', 'func': (lambda sa: sa.d**3 * sa.p**4),
      'min_value': 2048, 'max_value': 258854211 },
    { 'name': 'dealer^3*player^4*action', 'func': (lambda sa: sa.d**3 * sa.p**4 * sa.a),
      'min_value': 0, 'max_value': 258854211 },
    { 'name': 'dealer^3*player^4*soft', 'func': (lambda sa: sa.d**3 * sa.p**4 * sa.s),
      'min_value': 0, 'max_value': 258854211 },
    { 'name': 'dealer^3*player^4*soft*action', 'func': (lambda sa: sa.d**3 * sa.p**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 258854211 },
    { 'name': 'dealer^4', 'func': (lambda sa: sa.d**4),
      'min_value': 16, 'max_value': 14641 },
    { 'name': 'dealer^4*action', 'func': (lambda sa: sa.d**4 * sa.a),
      'min_value': 0, 'max_value': 14641 },
    { 'name': 'dealer^4*soft', 'func': (lambda sa: sa.d**4 * sa.s),
      'min_value': 0, 'max_value': 14641 },
    { 'name': 'dealer^4*soft*action', 'func': (lambda sa: sa.d**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 14641 },
    { 'name': 'dealer^4*player', 'func': (lambda sa: sa.d**4 * sa.p),
      'min_value': 64, 'max_value': 307461 },
    { 'name': 'dealer^4*player*action', 'func': (lambda sa: sa.d**4 * sa.p * sa.a),
      'min_value': 0, 'max_value': 307461 },
    { 'name': 'dealer^4*player*soft', 'func': (lambda sa: sa.d**4 * sa.p * sa.s),
      'min_value': 0, 'max_value': 307461 },
    { 'name': 'dealer^4*player*soft*action', 'func': (lambda sa: sa.d**4 * sa.p * sa.s * sa.a),
      'min_value': 0, 'max_value': 307461 },
    { 'name': 'dealer^4*player^2', 'func': (lambda sa: sa.d**4 * sa.p**2),
      'min_value': 256, 'max_value': 6456681 },
    { 'name': 'dealer^4*player^2*action', 'func': (lambda sa: sa.d**4 * sa.p**2 * sa.a),
      'min_value': 0, 'max_value': 6456681 },
    { 'name': 'dealer^4*player^2*soft', 'func': (lambda sa: sa.d**4 * sa.p**2 * sa.s),
      'min_value': 0, 'max_value': 6456681 },
    { 'name': 'dealer^4*player^2*soft*action', 'func': (lambda sa: sa.d**4 * sa.p**2 * sa.s * sa.a),
      'min_value': 0, 'max_value': 6456681 },
    { 'name': 'dealer^4*player^3', 'func': (lambda sa: sa.d**4 * sa.p**3),
      'min_value': 1024, 'max_value': 135590301 },
    { 'name': 'dealer^4*player^3*action', 'func': (lambda sa: sa.d**4 * sa.p**3 * sa.a),
      'min_value': 0, 'max_value': 135590301 },
    { 'name': 'dealer^4*player^3*soft', 'func': (lambda sa: sa.d**4 * sa.p**3 * sa.s),
      'min_value': 0, 'max_value': 135590301 },
    { 'name': 'dealer^4*player^3*soft*action', 'func': (lambda sa: sa.d**4 * sa.p**3 * sa.s * sa.a),
      'min_value': 0, 'max_value': 135590301 },
    { 'name': 'dealer^4*player^4', 'func': (lambda sa: sa.d**4 * sa.p**4),
      'min_value': 4096, 'max_value': 2847396321 },
    { 'name': 'dealer^4*player^4*action', 'func': (lambda sa: sa.d**4 * sa.p**4 * sa.a),
      'min_value': 0, 'max_value': 2847396321 },
    { 'name': 'dealer^4*player^4*soft', 'func': (lambda sa: sa.d**4 * sa.p**4 * sa.s),
      'min_value': 0, 'max_value': 2847396321 },
    { 'name': 'dealer^4*player^4*soft*action', 'func': (lambda sa: sa.d**4 * sa.p**4 * sa.s * sa.a),
      'min_value': 0, 'max_value': 2847396321 },
]
